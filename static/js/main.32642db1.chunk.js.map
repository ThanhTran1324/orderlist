{"version":3,"sources":["companies/kgi.js","reducers/index.js","reducers/itemReducer.js","Components/RenderItemList.js","actions/index.js","Components/CreateResetButton.js","Components/Output.js","index.js"],"names":["KGI_Item_List","name","qty","unit","combineReducers","items","state","action","newstate","type","map","item","index","payload","console","log","window","localStorage","setItem","JSON","stringify","getItem","parse","location","reload","RenderItemList","renderItem","props","key","onClick","increase","className","decrease","this","loadItemFromLocalStorage","React","Component","connect","id","CreateResetButton","reset","Output","renderTextOutPut","textoutput","copied","alert","text","style","width","height","readOnly","value","App","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.32642db1.chunk.js","sourcesContent":["// to store item list of company\nexport const KGI_Item_List = [\n    {\n        name:\"wasabi\",\n        qty:0,\n        unit:\"bag\"\n    },\n    {\n        name:\"rice\",\n        qty:0,\n        unit:\"bag\"\n    },\n    {\n        name:\"rice\",\n        qty:0,\n        unit:\"bag\"\n    },\n    {\n        name:\"rice\",\n        qty:0,\n        unit:\"bag\"\n    },\n    {\n        name:\"rice\",\n        qty:0,\n        unit:\"bag\"\n    },\n];","import {combineReducers} from 'redux';\nimport items from './itemReducer'\nexport default combineReducers({\n    items: items\n});","import {KGI_Item_List} from \"../companies/kgi\";\n\n\n\n\nexport default (state = KGI_Item_List , action) => {\n    let newstate=[];\n    switch(action.type){\n    \n        case \"INCREASE\": \n            \n            newstate=state.map((item,index) => {\n                if(index === action.payload)\n                {\n                    item.qty = item.qty + 1;   \n                }\n                return item;\n            });\n            console.log(KGI_Item_List,state);\n        window.localStorage.setItem('CGI_items', JSON.stringify(newstate));\n        return newstate;\n\n        case \"DECREASE\": \n        \n        newstate=state.map((item,index) => {\n                if(index === action.payload && item.qty -1 >= 0 )\n                {\n                    item.qty = item.qty - 1;   \n                }\n                return item;\n            });\n        window.localStorage.setItem('CGI_items', JSON.stringify(newstate));    \n        return newstate;\n\n        case \"LOADITEMFROMFLOCALSTORAGE\":\n                if(localStorage && localStorage.getItem('CGI_items'))\n                    return JSON.parse(localStorage.getItem('CGI_items'));  \n                else\n                    return state;\n\n        case \"RESET\": \n        //console.log(\"reset\");\n        //console.log(KGI_Item_List);\n            state=KGI_Item_List;\n            window.localStorage.setItem('CGI_items', JSON.stringify(state));\n            window.location.reload();\n            return state;\n\n       \n\n        default : \n            return state;\n    }\n};","import React from 'react';\nimport {connect} from \"react-redux\";\n\nimport {increase, decrease, loadItemFromLocalStorage} from '../actions';\n\n\nclass RenderItemList extends React.Component {\n\n    componentDidMount(){\n        this.props.loadItemFromLocalStorage();\n    };\n\n    renderItem = () => {\n        return this.props.items.map ( (item,index) => {\n            \n                    return (\n                    <tr key={index} >\n                            <td>{item.name}</td>\n                            <td > \n                                <span>\n                                <button onClick={() =>this.props.increase(index)} className=\"btn btn-success\"><h4>+</h4></button>\n                                 {item.qty}\n                                <button onClick={() =>this.props.decrease(index)} className=\"btn btn-danger\"><h4>-</h4></button>\n                                </span>\n                            </td>\n                            <td>{item.unit}</td>\n                    </tr>\n                    );\n                }\n            );\n        };\n    render(){\n        \n        return (\n            <tbody>\n                     {this.renderItem()}\n            </tbody>\n        );\n    }\n};\n\n\nconst mapStateToProps = (state)=>{\n    return {\n        items:state.items\n    };\n};\nexport default connect(mapStateToProps,{increase,decrease,loadItemFromLocalStorage})(RenderItemList) ;","\nexport const loadItemFromLocalStorage = () =>{\n    return {\n        type:\"LOADITEMFROMFLOCALSTORAGE\"\n\n    };\n};\n\nexport const increase = (id) =>{\n    \n    return {\n        type:\"INCREASE\",\n        payload: id\n    };\n};\n\n\nexport const decrease = (id) =>{\n    \n    return {\n        type:\"DECREASE\",\n        payload:id\n    };\n};\n\nexport const reset = () => {\n    return {\n        type:\"RESET\"\n    };\n};\n\nexport const createMessage = () =>{\n    return {\n        type:\"CREATE_MESSAGE\"\n    };\n};","import React from 'react';\nimport {connect} from \"react-redux\";\n\nimport {reset} from '../actions';\n\nclass CreateResetButton extends React.Component {\n    render(){\n        console.log(\"reseted\");\n        return (\n            <div> \n                <button onClick={this.props.reset} className=\"btn btn-danger btn-block block_button\">Reset</button>  \n            </div>\n        );\n    }\n};\n\nexport default connect(null,{reset})(CreateResetButton);","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nclass Output extends React.Component {\n    \n    renderTextOutPut = () =>{\n        \n        var textoutput=\"\";\n        this.props.items.map(function(item){\n            return textoutput = textoutput + item.name +\" \" + item.qty + \" \"+ item.unit +` ,\\n` ;\n            }\n        );\n        \n        return textoutput;\n    };\n    copied = () =>{\n        alert(\"thanks\");\n    };\n    render(){\n        \n        return (\n            <div className=\"form-group\">\n                <CopyToClipboard text={this.renderTextOutPut()}>\n                    <button  onClick={this.copied} className=\"btn btn-dark btn-block block_button\" >Copy Message</button>\n                </CopyToClipboard>\n                \n                \n                <textarea style={{width: \"100%\", height:\"500px\"  }} className=\"form-control\" id=\"textOutPut\" readOnly value={this.renderTextOutPut()}>\n                    \n                </textarea>\n            </div>\n            \n        );\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        items:state.items\n    };\n};\nexport default connect (mapStateToProps)(Output);","import React,{Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\n\nimport reducer from './reducers'\nimport RenderItemList from './Components/RenderItemList';\nimport CreateResetButton from './Components/CreateResetButton';\nimport Output from './Components/Output';\n\nexport class App extends Component {\n    \n    render(){\n        const store = createStore(reducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n        return (\n            <Provider store={store}>\n                \n                <table className=\"table table-secondary\">\n                    <thead>\n                        <tr>\n                            <th>Name: </th>\n                            <th>Qty: </th>\n                            <th>Unit: </th>\n                        </tr>\n                    </thead>\n                        <RenderItemList />\n                </table>\n                \n                <Output />\n                <CreateResetButton />\n            </Provider>\n        );\n    }\n}; \n\nReactDOM.render(<App/>,document.querySelector('#root'));"],"sourceRoot":""}