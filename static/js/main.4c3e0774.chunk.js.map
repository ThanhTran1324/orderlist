{"version":3,"sources":["companies/kgi.js","reducers/index.js","reducers/itemReducer.js","Components/RenderItemList.js","actions/index.js","Components/CreateResetButton.js","Components/Output.js","index.js"],"names":["KGI_Item_List","name","qty","unit","combineReducers","items","state","action","type","newstate","map","item","index","payload","window","localStorage","setItem","JSON","stringify","newstate2","getItem","parse","console","log","RenderItemList","renderItem","props","key","onClick","increase","className","decrease","this","loadItemFromLocalStorage","React","Component","connect","id","CreateResetButton","createMessage","reset","Output","renderTextOutPut","textoutput","style","width","height","readOnly","value","App","store","createStore","reducer","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4c3e0774.chunk.js","sourcesContent":["// to store item list of company\nexport const KGI_Item_List = [\n    {\n        name:\"wasabi\",\n        qty:0,\n        unit:\"bag\"\n    },\n    {\n        name:\"rice\",\n        qty:0,\n        unit:\"bag\"\n    },\n    {\n        name:\"rice\",\n        qty:0,\n        unit:\"bag\"\n    },\n    {\n        name:\"rice\",\n        qty:0,\n        unit:\"bag\"\n    },\n    {\n        name:\"rice\",\n        qty:0,\n        unit:\"bag\"\n    },\n];","import {combineReducers} from 'redux';\nimport items from './itemReducer'\nexport default combineReducers({\n    items: items\n});","import {KGI_Item_List} from \"../companies/kgi\";\n\n\n\n\nexport default (state = KGI_Item_List , action) => {\n    \n    switch(action.type){\n    \n        case \"INCREASE\": \n            let newstate = [] ;\n            newstate=state.map((item,index) => {\n                if(index === action.payload)\n                {\n                    item.qty = item.qty + 1;   \n                }\n                return item;\n            });\n        window.localStorage.setItem('CGI_items', JSON.stringify(newstate));\n        return newstate;\n\n        case \"DECREASE\": \n        let newstate2 = [] ;\n            newstate2=state.map((item,index) => {\n                if(index === action.payload && item.qty -1 >= 0 )\n                {\n                    item.qty = item.qty - 1;   \n                }\n                return item;\n            });\n        window.localStorage.setItem('CGI_items', JSON.stringify(newstate2));    \n        return newstate2;\n\n        case \"LOADITEMFROMFLOCALSTORAGE\":\n                if(localStorage && localStorage.getItem('CGI_items'))\n                \n                    return JSON.parse(localStorage.getItem('CGI_items'));  \n                else\n                    return state;\n\n        case \"RESET\": \n        console.log(\"reset\");\n        console.log(KGI_Item_List);\n            window.localStorage.setItem('CGI_items', JSON.stringify(KGI_Item_List));\n            return KGI_Item_List;\n\n        case \"CREATE_MESSAGE\":\n            console.log(state);\n            return state;\n\n        default : \n            return state;\n    }\n};","import React from 'react';\nimport {connect} from \"react-redux\";\n\nimport {increase, decrease, loadItemFromLocalStorage} from '../actions';\n\n\nclass RenderItemList extends React.Component {\n\n    componentDidMount(){\n        this.props.loadItemFromLocalStorage();\n    };\n\n    renderItem = () => {\n        return this.props.items.map ( (item,index) => {\n            console.log(item);\n                    return (\n                    <tr key={index}>\n                            <td>{item.name}</td>\n                            <td>\n                                <button onClick={() =>this.props.increase(index)} className=\"btn btn-success\"> + </button>\n                                : {item.qty}\n                                <button onClick={() =>this.props.decrease(index)} className=\"btn btn-danger\"> - </button>\n                                \n                            </td>\n                            <td>{item.unit}</td>\n                    </tr>\n                    );\n                }\n            );\n        };\n    render(){\n        \n        return (\n            <tbody>\n                     {this.renderItem()}\n            </tbody>\n        );\n    }\n};\n\n\nconst mapStateToProps = (state)=>{\n    return {\n        items:state.items\n    };\n};\nexport default connect(mapStateToProps,{increase,decrease,loadItemFromLocalStorage})(RenderItemList) ;","\nexport const loadItemFromLocalStorage = () =>{\n    return {\n        type:\"LOADITEMFROMFLOCALSTORAGE\"\n\n    };\n};\n\nexport const increase = (id) =>{\n    \n    return {\n        type:\"INCREASE\",\n        payload: id\n    };\n};\n\n\nexport const decrease = (id) =>{\n    \n    return {\n        type:\"DECREASE\",\n        payload:id\n    };\n};\n\nexport const reset = () => {\n    return {\n        type:\"RESET\"\n    };\n};\n\nexport const createMessage = () =>{\n    return {\n        type:\"CREATE_MESSAGE\"\n    };\n};","import React from 'react';\nimport {connect} from \"react-redux\";\n\nimport {reset,createMessage} from '../actions';\n\nclass CreateResetButton extends React.Component {\n    render(){\n        return (\n            <div> \n                <button onClick={this.props.createMessage} className=\"btn btn-success\">Create Message</button>  \n                <button onClick={this.props.reset} className=\"btn btn-danger\">Reset Button</button>  \n            </div>\n        );\n    }\n};\n\nexport default connect(null,{reset,createMessage})(CreateResetButton);","import React from 'react';\nimport {connect} from \"react-redux\";\n\nclass Output extends React.Component {\n\n    \n    renderTextOutPut = () =>{\n        \n        var textoutput=\"\";\n        this.props.items.map(function(item){\n            return textoutput = textoutput + item.name +\" \" + item.qty + \" \"+ item.unit +` ,\\n` ;\n        }\n        );\n        return textoutput;\n    };\n    render(){\n        \n        return (\n            <div className=\"form-group\">\n                <label >Your Message : </label>\n                \n                <button >Copy Button</button>\n                <textarea style={{width: \"100%\", height:\"500px\"  }} className=\"form-control\" id=\"textOutPut\" readOnly value={this.renderTextOutPut()}>\n                    \n                </textarea>\n            </div>\n            \n        );\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        items:state.items\n    };\n};\nexport default connect (mapStateToProps)(Output);","import React,{Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\n\nimport reducer from './reducers'\nimport RenderItemList from './Components/RenderItemList';\nimport CreateResetButton from './Components/CreateResetButton';\nimport Output from './Components/Output';\n\nexport class App extends Component {\n    \n    render(){\n        const store = createStore(reducer);\n        return (\n            <Provider store={store}>\n                \n                <table className=\"table table-secondary\">\n                    <thead>\n                        <tr>\n                            <th>Name: </th>\n                            <th>Qty: </th>\n                            <th>Unit: </th>\n                        </tr>\n                    </thead>\n                        <RenderItemList />\n                </table>\n                <CreateResetButton />\n                <Output />\n            </Provider>\n        );\n    }\n}; \n\nReactDOM.render(<App/>,document.querySelector('#root'));"],"sourceRoot":""}